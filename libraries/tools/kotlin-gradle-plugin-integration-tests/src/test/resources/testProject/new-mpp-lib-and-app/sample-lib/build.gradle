plugins {
    id("org.jetbrains.kotlin.multiplatform")
    id("maven-publish")
}

group = "com.example"
version = "1.0"

def shouldBeJs = true

kotlin {
	// Check the new preset functions:
	jvm('jvm6') { }
    if (shouldBeJs) {
        js('nodeJs') {
            nodejs {

            }
        }
        wasmJs()
    }
    targetFromPreset(presets.jvm, 'jvm6') { println targetName } // access existing target

    targets {
    	// Also check that the old DSL (fromPreset) works:
        fromPreset(presets.linuxX64, 'linux64')
        fromPreset(presets.mingwX64, 'mingw64')
        fromPreset(presets.macosX64, 'macos64')
        fromPreset(presets.macosArm64, 'macosArm64')

        // Check the DSL constructs in the Groovy DSL:
        fromPreset(presets.jvm, 'jvm6') {
        	println "Configuring $targetName"
            compilations.main {
                kotlinOptions {
                    println "jvmTarget = " + jvmTarget
                }
                defaultSourceSet {
                    println "Kotlin srcDirs: " + kotlin.srcDirs
                }
            }
        }

        all {
            mavenPublication {
                pom.withXml {
                    asNode().appendNode('name', 'Sample MPP library')
                }
            }
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib-common'
            }
        }
        commonTest {
            dependencies {
                implementation kotlin("test-common")
                implementation kotlin("test-annotations-common")
            }
        }
        jvm6Main {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.23.4'
            }
        }
        jvm6Test {
            dependencies {
                implementation kotlin("test-junit")
            }
        }
        if (shouldBeJs) {
            nodeJsMain {
                dependencies {
                    api 'org.jetbrains.kotlin:kotlin-stdlib-js'
                }
            }
        }

        nativeMain { dependsOn commonMain }
        linux64Main { dependsOn nativeMain }
        macos64Main { dependsOn nativeMain }
        macosArm64Main { dependsOn nativeMain }
    }
}

kotlin.sourceSets.each { println it.kotlin.srcDirs }

publishing {
	repositories {
		maven { url "${projectDir.absolutePath.replace('\\', '/')}/repo" }
	}
}

// Check that a compilation may be created after project evaluation, KT-28896:
afterEvaluate {
    kotlin {
        jvm('jvm6').compilations.create('benchmark') {
            assemble.dependsOn compileKotlinTask
        }
    }
}
